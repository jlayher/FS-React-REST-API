{"version":3,"sources":["components/context/index.js","components/Header.js","components/Courses.js","components/CreateCourse.js","components/UpdateCourse.js","components/CourseDetail.js","components/UserSignIn.js","components/UserSignUp.js","components/UserSignOut.js","components/Forbidden.js","components/UnhandledError.js","components/NotFound.js","components/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","Provider","Consumer","Header","props","context","className","to","state","isAuthenticated","firstName","lastName","Courses","courses","a","axios","get","then","res","setState","data","catch","err","console","log","this","map","course","id","title","version","xmlns","x","y","viewBox","points","Component","CreateCourse","handleSubmit","event","preventDefault","errors","method","url","auth","username","Cookies","password","courseTitle","description","courseDescription","estimatedTime","materialsNeeded","userId","history","push","response","status","handleChange","bind","handleCancel","target","name","value","length","error","i","onSubmit","htmlFor","type","placeholder","onChange","onClick","CreateCourseWithContext","UpdateCourse","match","params","placeholderTitle","placeholderDescription","UpdateCourseWithContext","CourseDetail","handleDeleteCourse","window","confirm","delete","emailAddress","alert","user","User","source","CourseDetailWithContext","UserSignIn","signIn","goBack","contextType","UserSignInWithContext","UserSignUp","confirmPassword","UserSignUpWithContext","UserSignOut","userContext","useContext","useEffect","signOut","Forbidden","UnhandledError","NotFound","PrivateRoute","component","rest","render","pathname","from","location","App","set","expires","remove","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41877072.chunk.js","sourcesContent":["import React from 'react';\n//import Cookies from 'js-cookie';\n\nexport const UserContext = React.createContext();\n\nexport const Provider = UserContext.Provider;\nexport const Consumer = UserContext.Consumer;\n","/*Header is a stateless component.\nIt displays a menu bar for the application and includes \n    buttons for signing in (as long as the user is not currently authenticated)\n    buttons for signing up (as long as the user is not currently authenticated)\n    the user's name and a button for signing out (when there is an authenticated user)\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Consumer } from \"./context\";\n\nconst Header = (props) => {\n    return(\n        <Consumer>\n            {context => (\n                <header>\n                    <div className=\"wrap header--flex\">\n                        <h1 className=\"header--logo\"><Link to=\"/\">Courses</Link></h1>\n                        <nav>\n                            {/* Display links depending on authentication */}\n                            {context.state.isAuthenticated ? (\n                                <ul className=\"header--signedin\">\n                                    <li>Welcome, {context.state.firstName} {context.state.lastName}!</li>\n                                    <li><Link to=\"/signout\">Sign Out</Link></li>\n                                </ul>\n                            ) : (\n                                <ul className=\"header--signedout\">\n                                    <li><Link to=\"/signup\">Sign Up</Link></li>\n                                    <li><Link to=\"/signin\">Sign In</Link></li>\n                                </ul>\n                            )}\n                        </nav>\n                    </div>\n                </header>\n            )}\n        </Consumer>\n\n    );\n}\n\nexport default Header;","/* \nThe Course Component renders the \"Courses\" page (a list of courses)\nby retrieving the list of courses from \"/api/courses\" \nEach course links to its associated \"Course Detail\" page, as well as \na Link to the \"Create Course\" page\n*/\nimport React, {Component} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default class Courses extends Component {\n    constructor() {\n        super();\n        this.state = {\n            courses: []\n        };\n    }\n    \n    // fetch the courses data and set courses state\n    async componentDidMount() {\n        await axios.get('http://localhost:5000/api/courses')\n            .then(res => {\n                this.setState({\n                    courses: res.data\n                });\n            })\n            .catch((err)=>{\n                console.log(err);\n            })\n    }\n\n    render() {\n        return(\n            <main>\n                <div className=\"wrap main--grid\">\n                    {/* map over courses and render links to course descriptions */}\n                    {this.state.courses.map( (course) => \n                        <div key={course.id}>\n                            <NavLink className=\"course--module course--link\" to={`/courses/${course.id}`}>\n                                <h2 className=\"course--label\">Course</h2>\n                                <h3 className=\"course--title\">{course.title}</h3>\n                            </NavLink>\n                        </div>\n                    )}\n\n                    {/* Create A New Course Link */}\n                    <NavLink className=\"course--module course--add--module\" to=\"/courses/create\">\n                        <span className=\"course--add--title\">\n                            <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                            viewBox=\"0 0 13 13\" className=\"add\"><polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon></svg>\n                            New Course\n                        </span>\n                    </NavLink>\n                </div>\n            </main>\n        );\n    }\n\n}\n\n\n","/*\nThe Create Course Component renders the \"Create Course\" page.\nIt renders a form that allows a user to create a new course.\nIt also renders a \"Create Course\" button which sends a POST Request\nto the API's \"/api/courses\" route.  \nIt also renders a \"Cancel\" button that returns the client to the course list.\n*/\n\nimport React, { Component } from 'react';\nimport { Consumer } from './context';\nimport axios from 'axios';\n\n//import js-cookies\nimport Cookies from 'js-cookie';\n\nclass CreateCourse extends Component {\n    constructor(props) {\n        super(props)\n        this.state ={\n            courseTitle: '',\n            courseDescription: '',\n            estimatedTime: '',\n            materialsNeeded: '',\n            errors: []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n    //Change state for inputs\n    handleChange(event) {\n        this.setState({ [event.target.name] : event.target.value });\n     }\n\n    //Cancel Button Functionality \n    handleCancel(event) {\n        event.preventDefault();\n        this.props.history.push('/')\n    }\n\n    //When submitted, POST the New Course to the Database\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const url = 'http://localhost:5000/api/courses';\n        this.setState({errors: []});\n\n        axios({\n            method: 'post',\n            url: url,\n            auth: {\n                username: Cookies.get('username'),\n                password: Cookies.get('password')\n            },\n            data: {\n                title: this.state.courseTitle,\n                description: this.state.courseDescription,\n                estimatedTime: this.state.estimatedTime,\n                materialsNeeded: this.state.materialsNeeded,\n                userId: this.props.context.state.id,\n            }\n        })\n        .then(res => {\n            this.props.history.push(`/`);\n        })\n        .catch((err) => {\n            if(err.response.status === 400) {\n                this.setState({\n                    errors: err.response.data.errors\n                })\n            } \n        })\n    }\n    \n    render(){\n        return(\n            <Consumer>\n                {context => (\n                    <main>\n                        <div className=\"wrap\">\n                            <h2>Create Course</h2>\n                            {/* Validation Errors */}\n                            {this.state.errors.length > 0 && (\n                                <div className=\"validation--errors\">\n                                    <h3>Validation Errors</h3>\n                                    <ul>\n                                        {this.state.errors.map((error, i) =>(\n                                            <li key={i}>{error}</li>\n                                        ))}\n                                    </ul>\n                                </div> \n                            )}\n                            <form onSubmit={this.handleSubmit}>\n                                <div className=\"main--flex\">\n                                    <div>\n                                        <label htmlFor=\"courseTitle\">Course Title</label>\n                                        <input \n                                            id=\"courseTitle\" \n                                            name=\"courseTitle\" \n                                            type=\"text\" \n                                            placeholder=\"Title...\" \n                                            value={this.state.courseTitle} \n                                            onChange={this.handleChange}/>\n\n                                        <label htmlFor=\"courseAuthor\">Course Author</label>\n                                        <input \n                                            id=\"courseAuthor\" \n                                            name=\"courseAuthor\" \n                                            type=\"text\" \n                                            value={`${context.state.firstName} ${context.state.lastName}`} \n                                            onChange={this.handleChange}/>\n\n                                        <label htmlFor=\"courseDescription\">Course Description</label>\n                                        <textarea \n                                            id=\"courseDescription\" \n                                            name=\"courseDescription\" \n                                            placeholder=\"Description...\" \n                                            value={this.state.courseDescription} \n                                            onChange={this.handleChange}>\n                                        </textarea>\n                                    </div>\n                                    <div>\n                                        <label htmlFor=\"estimatedTime\">Estimated Time</label>\n                                        <input \n                                            id=\"estimatedTime\" \n                                            name=\"estimatedTime\" \n                                            type=\"text\" \n                                            placeholder=\"Estimated Time...\" \n                                            value={this.state.estimatedTime} \n                                            onChange={this.handleChange}/>\n\n                                        <label htmlFor=\"materialsNeeded\">Materials Needed</label>\n                                        <textarea \n                                            id=\"materialsNeeded\" \n                                            name=\"materialsNeeded\" \n                                            placeholder=\"Materials Needed...\" \n                                            value={this.state.materialsNeeded} \n                                            onChange={this.handleChange}>\n                                        </textarea>\n                                    </div>\n                                </div>\n                                <button className=\"button\" type=\"submit\">Create Course</button>\n                                <button className=\"button button-secondary\" onClick={this.handleCancel}>Cancel</button>\n                            </form>\n                        </div>\n                    </main>\n                )}\n            </Consumer>\n        );\n    }\n}\n\nconst CreateCourseWithContext = (props) =>{\n    return( \n    <Consumer>\n        {context => <CreateCourse {...props} context={context} />}\n    </Consumer>\n    ) \n}\nexport default CreateCourseWithContext;\n\n","/*\nThe UpdateCourse Component renders the \"Update Course\" page.\nIt renders a form that allows a user to update on of their existing courses.\nIt also renders an \"Update Course\" button that sends a PUT request to \n\"/api/courses/:id\"\nIt also renders a \"Cancel\" button that returns the client to the \"Course Detail\" page\n*/\n\nimport React, {Component} from 'react';\nimport axios from 'axios';\nimport { Consumer } from './context';\n\n//import js-cookies\nimport Cookies from 'js-cookie';\n\nclass UpdateCourse extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            courseTitle: '',\n            courseDescription: '',\n            estimatedTime: '',\n            materialsNeeded: '',\n            errors: []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n\n    //set state based on course id\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        await axios.get(`http://localhost:5000/api/courses/${id}`)\n            .then(res => {\n                this.setState({\n                    courseTitle: res.data.title,\n                    courseDescription: res.data.description,\n                    materialsNeeded: res.data.materialsNeeded,\n                    estimatedTime: res.data.estimatedTime,\n                });\n                console.log(res.status)\n            })\n            .catch((err) => {\n                console.log(err.response.status)\n            });\n    }\n\n    //Change state for inputs\n    handleChange(event) {\n        this.setState({ [event.target.name] : event.target.value });\n     }\n\n     //Cancel Button Functionality \n     handleCancel(event) {\n         event.preventDefault();\n         const {id} = this.props.match.params;\n         this.props.history.push(`/courses/${id}`)\n     }\n\n    //When Submitted, PUT the Updates (Course) to the Database\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const {id} = this.props.match.params;\n        const url = `http://localhost:5000/api/courses/${id}`;\n        this.setState({errors: []});\n\n        axios({\n            method: 'put',\n            url: url,\n            auth: {\n                username: Cookies.get('username'),\n                password: Cookies.get('password')\n            },\n            data: {\n                title: this.state.courseTitle,\n                description: this.state.courseDescription,\n                estimatedTime: this.state.estimatedTime,\n                materialsNeeded: this.state.materialsNeeded\n            }\n        })\n        .then(res => {\n            this.props.history.push(`/courses/${id}`)\n        })\n        //Error Redirect Issues\n        .catch((err) => {\n            if(err.response.status === 400) {\n                this.setState({\n                    errors: err.response.data.errors\n                })\n            } else if(err.response.status === 404){\n                this.props.history.push('/notfound')\n            } else if(err.response.status === 500){\n                this.props.history.push('/error')\n            }\n        })\n    }\n\n    render(){\n        const placeholderTitle = this.state.courseTitle;\n        const placeholderDescription = this.state.courseDescription;\n        return(\n            <Consumer>\n                {context => (\n                    <main>\n                        <div className=\"wrap\">\n                            <h2>Update Course</h2>\n                            {/* Validation Errors */}\n                            {this.state.errors.length > 0 && (\n                                <div className=\"validation--errors\">\n                                    <h3>Validation Errors</h3>\n                                    <ul>\n                                        {this.state.errors.map((error, i) =>(\n                                            <li key={i}>{error}</li>\n                                        ))}\n                                    </ul>\n                                </div> \n                            )}\n                            <form onSubmit={this.handleSubmit}>\n                                <div className=\"main--flex\">\n                                    <div>\n                                        <label htmlFor=\"courseTitle\">Course Title</label>\n                                        <input \n                                            id=\"courseTitle\" \n                                            name=\"courseTitle\" \n                                            type=\"text\" \n                                            placeholder={placeholderTitle} \n                                            value={this.state.courseTitle} \n                                            onChange={this.handleChange} />\n\n                                        <label htmlFor=\"courseAuthor\">Course Author</label>\n                                        <input \n                                            id=\"courseAuthor\" \n                                            name=\"courseAuthor\" \n                                            type=\"text\" \n                                            value={`${context.state.firstName} ${context.state.lastName}`} \n                                            onChange={this.handleChange} />\n\n                                        <label htmlFor=\"courseDescription\">Course Description</label>\n                                        <textarea \n                                            id=\"courseDescription\" \n                                            name=\"courseDescription\" \n                                            placeholder= {placeholderDescription}\n                                            value= {this.state.courseDescription}\n                                            onChange={this.handleChange}>\n                                        </textarea>\n                                    </div>\n                                    <div>\n                                        <label htmlFor=\"estimatedTime\">Estimated Time</label>\n                                        <input \n                                            id=\"estimatedTime\" \n                                            name=\"estimatedTime\" \n                                            type=\"text\" \n                                            placeholder={this.state.estimatedTime} \n                                            value={this.state.estimatedTime} \n                                            onChange={this.handleChange}/>\n                                            \n                                        <label htmlFor=\"materialsNeeded\">Materials Needed</label>\n                                        <textarea \n                                            id=\"materialsNeeded\" \n                                            name=\"materialsNeeded\" \n                                            placeholder={this.state.materialsNeeded} \n                                            value={this.state.materialsNeeded} \n                                            onChange={this.handleChange}></textarea>\n                                    </div>\n                                </div>\n                                <button className=\"button\" type=\"submit\">Update Course</button>\n                                <button className=\"button button-secondary\" onClick={this.handleCancel}>Cancel</button>\n                            </form>\n                        </div>\n                    </main>\n                    \n                )}\n            </Consumer> \n        );\n    }\n}\n\nconst UpdateCourseWithContext = (props) =>{\n    return( \n    <Consumer>\n        {context => <UpdateCourse {...props} context={context} />}\n    </Consumer>\n    ) \n}\nexport default UpdateCourseWithContext;\n\n","/*\nThe CourseDetail Component renders the \"Course Detail\" page for \nits associated course when the route is \"/api/courses/:id\".\nThe component also renders a \"Delete Course\" button which sends\na DELETE request to the server at \"/api/courses/:id\".\nThis component also renders a button that navigates the client to the \n\"Update Course\" page.\n*/\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { NavLink } from 'react-router-dom';\nimport { Consumer } from '../components/context';\n\n//import Markdown\nimport ReactMarkdown from 'react-markdown';\n\n//import js-cookies\nimport Cookies from 'js-cookie';\n\nclass CourseDetail extends Component {\n    constructor() {\n        super();\n        this.state ={\n            course: [],\n            user: []\n        };\n        this.handleDeleteCourse = this.handleDeleteCourse.bind(this);\n    }\n\n    //get specific course from api using id\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        axios.get(`http://localhost:5000/api/courses/${id}`)\n            .then(res => {\n                this.setState({ course: res.data, user: res.data.User});\n            })\n            .catch((err) => {\n                if(err.response.status === 404){\n                    this.props.history.push('/notfound');\n                }else{\n                    this.props.history.push('/error')\n                }\n            })\n        }\n\n    //Create a handleDeleteCourse function to Delete a Course\n    handleDeleteCourse = (event) => {\n        event.preventDefault();\n        const { id } = this.props.match.params;\n        const url = `http://localhost:5000/api/courses/${id}`;\n        console.log(id);\n        if ( window.confirm(`Are you sure you want to DELETE ${this.state.course.title}?`)) {\n            axios.delete(url, {\n                auth: {\n                    username: Cookies.get('username'),\n                    password: Cookies.get('password')\n                },\n            })\n            .then(res => {\n                //redirect back to the Courses page\n                this.props.history.push('/')\n                console.log(`${this.props.value.state.emailAddress} ${this.props.value.state.password}`)\n            })\n            .catch((err) => {\n                window.alert(\"You do not have permission to delete this course\");\n                console.log(err);\n            })\n        }\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {context => (\n                    <main>\n                        <div className=\"actions--bar\">\n                            <div className=\"wrap\">\n                            {context.state.isAuthenticated && this.state.course.userId === context.state.id ? (\n                                <span>\n                                    <NavLink className=\"button\" to={`/courses/${this.state.course.id}/update`}>Update Course</NavLink>\n                                    <NavLink className=\"button\" to={`/courses/${this.state.course.id}`} onClick={this.handleDeleteCourse}>Delete Course</NavLink>\n                                </span>\n                            ) : (\n                                null\n                            )}\n                                <NavLink className=\"button button-secondary\" to='/'>Return to List</NavLink>\n                            </div>\n                        </div>\n                        \n                        <div className=\"wrap\">\n                            <h2>Course Detail</h2>\n                            <form>\n                                <div className=\"main--flex\">\n                                    <div>\n                                        <h3 className=\"course--detail--title\">Course</h3>\n                                        <h4 className=\"course--name\">{this.state.course.title}</h4>\n                                        <p>By {this.state.user.firstName} {this.state.user.lastName}</p>\n\n                                        <ReactMarkdown source={this.state.course.description} />\n                                    </div>\n                                    <div>\n                                        <h3 className=\"course--detail--title\">Estimated Time</h3>\n                                        <p>{this.state.course.estimatedTime}</p>\n                                        <h3 className=\"course--detail--title\">Materials Needed</h3>\n                                        <ReactMarkdown source={this.state.course.materialsNeeded} />\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </main>\n                )}\n            </Consumer>\n        );\n    }\n}\n \nconst CourseDetailWithContext = (props) =>{\n    return( \n        <Consumer>\n            {context => <CourseDetail {...props} value={context} />}\n        </Consumer>\n    ) \n}\nexport default CourseDetailWithContext;\n","/*\nThe UserSignIn Component renders the \"Sign In\" page.\nIt renders a form that allows a user to sign in using their existing account info.\nIt also render a \"Sign In\" button which allows the user to sign in, as well as\na \"Cancel\" button that returns the user to the course list\n*/\n\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Consumer, UserContext } from './context';\n\nclass UserSignIn extends Component {\n    constructor() {\n        super();\n        this.state = {\n            emailAddress: '',\n            password: '',\n            isAuthenticated: '',\n            errors: []\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    //use context\n    static contextType = UserContext;\n\n    //Cancel Button Functionality\n    handleCancel(event) {\n        event.preventDefault();\n        this.props.history.push('/')\n    }\n\n    //Change state for inputs\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    //Sign in the user\n    handleSubmit = (event) => {\n        event.preventDefault();\n        let context = this.context;\n        if(this.state.emailAddress === \"\" || this.state.password ===\"\" ) {\n            window.alert(\"Please Provide Values for both the Email Address, and Password Fields\")\n        }else {\n            context.signIn(this.state.emailAddress, this.state.password);\n            this.props.history.goBack()\n        }\n    }\n\n    render() {\n        return(\n            <Consumer>\n            {context => (\n                <div className=\"form--centered\">\n                    <h2>Sign In</h2>\n                    <form onSubmit={this.handleSubmit}>\n                        <label htmlFor=\"emailAddress\">Email Address</label>\n                        <input id=\"emailAddress\" name=\"emailAddress\" type=\"email\" placeholder=\"joesmith@email.com\" value={this.state.emailAddress} onChange={this.handleChange}/>\n                        <label htmlFor=\"password\">Password</label>\n                        <input id=\"password\" name=\"password\" type=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange}/>\n                        <button className=\"button\" type=\"submit\">Sign In</button>\n                        <button className=\"button button-secondary\" type=\"button\" onClick={this.handleCancel}>Cancel</button>\n                    </form>\n                    <p>Don't have a user account? Click here to <NavLink to=\"/signup\">sign up</NavLink>!</p>\n                </div>\n            )}   \n            </Consumer>\n        );\n    }\n}\n\nconst UserSignInWithContext = (props) =>{\n    return( \n    <Consumer>\n        {context => <UserSignIn {...props} context={context} />}\n    </Consumer>\n    ) \n}\nexport default UserSignInWithContext;\n","/*\nThe UserSignUp Component renders the \"Sign Up\" page by\nrendering a form, allowing the user to create a new account.\nThe component also renders a \"Sign Up\" button that creates a POST Request\nto the API's \"/api/users\" route, and signs in the user.\nThe component also renders a \"Cancel\" button that returns the client to the course list\n*/\n\nimport React, {Component} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Consumer, UserContext } from './context';\nimport axios from 'axios';\n\nclass UserSignUp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            firstName: '',\n            lastName: '',\n            emailAddress: '',\n            password: '',\n            confirmPassword: '',\n            errors: []\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n\n    //use context\n    static contextType = UserContext;\n\n    //Change state for inputs\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    //Cancel Button Functionality       \n    handleCancel(event) {\n        event.preventDefault();\n        this.props.history.push('/')\n    }\n\n    //When Submitted, POST the New User to the Database\n    handleSubmit = (event) => {\n        event.preventDefault();\n        \n        const url = 'http://localhost:5000/api/users';\n        this.setState({errors: []});\n        let context = this.context;\n        if (this.state.password === this.state.confirmPassword) {\n            axios({\n                method: 'post',\n                url: url,\n                data:\n                {\n                    firstName: this.state.firstName,\n                    lastName: this.state.lastName,\n                    emailAddress: this.state.emailAddress,\n                    password: this.state.password,\n                }\n            })\n            .then(res => {\n                    context.signIn(this.state.emailAddress, this.state.password);\n                    // this.props.value.signIn(this.state.emailAddress, this.state.password);\n                    this.props.history.push('/');\n                }\n            )\n            .catch((err) => {\n                if(err.response.status === 400) {\n                    this.setState({\n                        errors: err.response.data.errors\n                    })\n                } else {\n                    console.log(err)\n                }\n            })\n        } else {\n            window.alert(\"Your Password does not match your Confirmed Password\");\n        }\n    }\n\n\n    render(){\n        return(\n            <Consumer>\n                {context => (\n                    <main>\n                        <div className=\"form--centered\">\n                            <h2>Sign Up</h2>\n                            {/* Validation Errors */}\n                            {this.state.errors.length > 0 && (\n                                <div className=\"validation--errors\">\n                                    <h3>Validation Errors</h3>\n                                    <ul>\n                                        {this.state.errors.map((error, i) =>(\n                                            <li key={i}>{error}</li>\n                                        ))}\n                                    </ul>\n                                </div> \n                            )}\n                            <form onSubmit={this.handleSubmit}>\n                                <label htmlFor=\"firstName\">First Name</label>\n                                <input id=\"firstName\" name=\"firstName\" type=\"text\" value={this.state.firstName} onChange={this.handleChange}/>\n                                <label htmlFor=\"lastName\">Last Name</label>\n                                <input id=\"lastName\" name=\"lastName\" type=\"text\" value={this.state.lastName} onChange={this.handleChange}/>\n                                <label htmlFor=\"emailAddress\">Email Address</label>\n                                <input id=\"emailAddress\" name=\"emailAddress\" type=\"email\" value={this.state.emailAddress} onChange={this.handleChange}/>\n                                <label htmlFor=\"password\">Password</label>\n                                <input id=\"password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleChange} />\n                                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                                <input id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" value={this.state.confirmPassword} onChange={this.handleChange} />\n                                <button className=\"button\" type=\"submit\">Sign Up</button>\n                                <button className=\"button button-secondary\" onClick={this.handleCancel}>Cancel</button>\n                            </form>\n                            <p>Already have a user account? Click here to <NavLink to=\"/signin\">sign in</NavLink>!</p>\n                        </div>\n                    </main>\n                )}\n            </Consumer>\n            \n        );\n    }\n}\n\nconst UserSignUpWithContext = (props) =>{\n    return( \n    <Consumer>\n        {context => <UserSignUp {...props} context={context} />}\n    </Consumer>\n    ) \n}\nexport default UserSignUpWithContext;\n","/* UserSignOut is a stateless component that does not render any\nvisual elements.  It simply signs out the authenticated user and redirects the \nclient to the course list\n*/\nimport React, { useContext, useEffect } from 'react';\nimport {UserContext} from './context';\nimport {Redirect} from 'react-router-dom'\n\n//Sign out user and redirect to the home page\nexport default function UserSignOut() {\n    const userContext = useContext(UserContext)\n    useEffect(() => {\n        userContext.signOut();\n    })\n\n    return(\n        <Redirect to='/' />\n    )\n}\n","import React from 'react';\n\nconst Forbidden = () => {\n    return(\n        <div className='wrap'>\n            <h1>Forbidden!</h1>\n            <p>Sorry!  You can't access this page!</p>\n        </div>\n    )\n}\n\nexport default Forbidden;","import React from 'react';\n\nconst UnhandledError = () => {\n    return(\n        <div className='wrap'>\n            <h1>Error</h1>\n            <p>Sorry!  We just encountered an unexpected error!</p>\n        </div>\n    )\n}\n\nexport default UnhandledError;","import React from 'react';\n\nconst NotFound = () => {\n    return(\n        <div className='wrap'>\n            <h1>Not Found</h1>\n            <p>Sorry! We couldn't find the page you were looking for.</p>\n        </div>\n    )\n}\n\nexport default NotFound;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\"\nimport { Consumer } from \"./context\";\n\n//  Creates private routes for the /courses/create and /courses/:id/update routes.\n//  Only available to properly authenticated users\nfunction PrivateRoute({ component: Component, ...rest }) {\n    return (\n      <Consumer>\n        {context => (\n          <Route\n            {...rest}\n              render={ props => \n                context.state.isAuthenticated ? (\n                  <Component {...props} />\n                ) : (\n                  <Redirect\n                    to={{\n                      pathname: \"/signin\",\n                      state: { from: props.location }\n                    }}\n                  />\n                )\n              }\n            />\n        )}\n      </Consumer>\n    );\n  }\n\nexport default PrivateRoute;","import React, {Component} from 'react';\n\n//import Axios\nimport axios from 'axios';\n\n//imports from React Router DOM\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\n//import js-cookies\nimport Cookies from 'js-cookie';\n\n//import context\nimport { Provider } from './components/context';\n\n\n//import components\nimport Header from './components/Header';\nimport Courses from './components/Courses';\nimport CreateCourseWithContext from './components/CreateCourse';\nimport UpdateCourseWithContext from './components/UpdateCourse';\nimport CourseDetailWithContext from './components/CourseDetail';\nimport UserSignInWithContext from './components/UserSignIn';\nimport UserSignUpWithContext from './components/UserSignUp';\nimport UserSignOut from './components/UserSignOut';\nimport Forbidden from './components/Forbidden';\nimport UnhandledError from './components/UnhandledError';\nimport NotFound from './components/NotFound';\nimport PrivateRoute from './components/PrivateRoute';\n\n//import styles\nimport './styles/global.css';\n\n\n//Create Container App Component.  Provides the user Context\nclass App extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        user: {\n          id: '',\n          firstName: '',\n          lastName: '',\n          emailAddress: '',\n          password: '',\n          isAuthenticated: false\n        }\n      };\n      this.signIn = this.signIn.bind(this);\n      this.signOut = this.signOut.bind(this);\n  }\n\n  //on mount set cookies and persist authentication\n  componentDidMount() {\n    let username = Cookies.get(\"username\");\n    let password = Cookies.get(\"password\");\n    if (!this.state.isAuthenticated && username && password) {\n      this.signIn(username, password);\n    }\n  }\n\n    //Sign in Component shared through Context to Child Components\n    signIn = async (emailAddress, password) => {\n    const url = 'http://localhost:5000/api/users';\n    axios.get(url, {\n      auth: {\n        username: emailAddress,\n        password: password\n      },\n    })\n      .then(res => {\n        if (res.status === 200) {\n          this.setState({\n            user: {\n              id: res.data.id,\n              firstName: res.data.firstName,\n              lastName: res.data.lastName,\n              emailAddress: res.data.emailAddress,\n              password: res.data.password,\n              isAuthenticated: true\n            }\n          });\n          Cookies.set('username', emailAddress, {expires: 1})\n          Cookies.set('password', password, {expires: 1})\n          console.log(`${res.data.emailAddress} has been Authenticated`);\n        }\n      })\n      .catch(err => {\n        window.alert(`An Error Occured During Authentication: ${err}`);\n        console.log(`An Error Occured During Authentication: ${err}`)\n      })\n  }\n\n  //signOut function passed to the UserSignOut Component\n  signOut() {\n    this.setState({\n      user: {\n        id: '',\n        firstName: '',\n        lastName: '',\n        emailAddress: '',\n        password: '',\n        isAuthenticated: false\n    }})\n    Cookies.remove('username')\n    Cookies.remove('password')\n  }\n\n  //Provider and Routes\n  render(){\n    return (\n      <Provider value={{\n        state: this.state.user,\n        signIn: this.signIn,\n        signOut: this.signOut\n      }}>\n        <Router>\n          <div>\n            <Header />\n            <Switch>\n              <Route exact path=\"/\" render={() => <Courses />} />\n              <PrivateRoute exact path=\"/courses/create\" component={ CreateCourseWithContext } user={this.state.user}/>\n              <PrivateRoute exact path=\"/courses/:id/update\" component={ UpdateCourseWithContext } user={this.state.user}/>\n              <Route exact path=\"/courses/:id\" render={(props) => <CourseDetailWithContext {...props}/>} />\n              <Route exact path=\"/signin\" render={(props) => <UserSignInWithContext {...props}/>} />\n              <Route exact path=\"/signup\" render={(props) => <UserSignUpWithContext {...props}/>} />\n              <Route exact path=\"/signout\" render={() => <UserSignOut />} />\n              <Route exact path=\"/forbidden\" render={()=> <Forbidden />} />\n              <Route exact path=\"/error\" render={() => <UnhandledError />} />\n              <Route exact path=\"/notfound\" component={NotFound}/>\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}